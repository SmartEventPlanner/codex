name: Issue to PR (Gemini)

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

on:
  issues:
    types: [labeled]

jobs:
  from-issue:
    runs-on: ubuntu-latest
    # ラベル 'codex' が付いたときのみ
    if: github.event.label.name == 'codex'

    # gh CLI 用のトークンを全ステップへ配布
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    permissions:
      contents: write
      pull-requests: write
      issues: write        # ← これを追加（issue にコメントするため）


    steps:
      - uses: actions/checkout@v4

      - name: Set git user (bot)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Install deps for scripts
        run: npm install --no-audit --no-fund @google/genai@^0.9.0

      - name: Generate patch via Gemini
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY:  ${{ github.event.issue.body }}
          ISSUE_NUM:   ${{ github.event.issue.number }}
        run: |
          set -e
          BRANCH="gemini/issue-${ISSUE_NUM}"
          git switch -c "$BRANCH"

          node .github/scripts/make-patch.js "$ISSUE_TITLE" "$ISSUE_BODY" > ai.patch

          if [ ! -s ai.patch ]; then
            echo "No patch generated (empty ai.patch)."
            # 429等で生成できなかった旨をIssueへ通知（GH_TOKENはジョブenvで供給）
            gh issue comment "$ISSUE_NUM" -b "Gemini API のレート/クオータに達した可能性があります。時間を置いて再度ラベル付与してください。" || true
            exit 0
          fi

          echo "---- PATCH (first 200 lines) ----"
          head -n 200 ai.patch || true
          echo "---------------------------------"

          git apply -p0 --index ai.patch

          if [[ -n "$(git status --porcelain)" ]]; then
            git add -A
            git commit -m "Fix: #${ISSUE_NUM} – ${ISSUE_TITLE}"
            git push -u origin "$BRANCH"
          else
            echo "No changes after apply."
            exit 0
          fi

      - name: Create Pull Request
        if: ${{ success() }}
        env:
          ISSUE_NUM: ${{ github.event.issue.number }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
        run: |
          gh pr create \
            --title "Fix: #${ISSUE_NUM} – ${ISSUE_TITLE}" \
            --body  "Automated fix generated by Gemini API." \
            --head  "gemini/issue-${ISSUE_NUM}" \
            --base  "main"
